@group(0) @binding(0) var<uniform> uMyUniforms: MyUniforms;
@group(1) @binding(0) var<storage,read> inbuf_tet_precomp: array<TetPrecomputeData>;
@group(2) @binding(0) var<storage,read> inbuf_tet_precomp_viewdep : array<TetPrecomputeDataViewDep>;

@fragment
fn fs_main(in: VertexOutput) -> @location(0) vec4<f32> {
	// Combine texture and lighting
    
    let pci = inbuf_tet_precomp[in.tet_id];
    let pcd = inbuf_tet_precomp_viewdep[in.tet_id];


    let campos = uMyUniforms.camera_in_object_space;
    let view = in.position_model.xyz - campos;


    let scale = 0.2;
    let val = clamp(length(view)*scale, 0., 1.);
	var color = vec3<f32>(val, 1.-val, 0.);
	// Gamma-correction
    color = pcd.cramer_t_nom.xyz;
	let corrected_color = pow(color, vec3<f32>(2.2));
	return vec4<f32>(corrected_color, uMyUniforms.color.a);
}

